name: Django CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Run tests (optional)
      - name: Run tests
        run: python manage.py test

      # Build Docker image
      - name: Build Docker image
        run: docker build -t django-app .

      # Deploy to EC2
      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        run: |
          # Configure SSH key
          echo "${{ secrets.EC2_PRIVATE_KEY }}" | tr -d '\r' > deploy_key.pem
          chmod 600 deploy_key.pem

          # Copy Docker Compose or deployment files (if needed)
          scp -o StrictHostKeyChecking=no -i deploy_key.pem \
            docker-compose.yml $EC2_USER@$EC2_HOST:/home/ubuntu/ || true

          # Deploy and restart the application on EC2
          ssh -o StrictHostKeyChecking=no -i deploy_key.pem $EC2_USER@$EC2_HOST << 'EOF'
            cd /home/ubuntu/

            # Stop and remove the existing container
            docker stop django-app || true
            docker rm django-app || true

            # Pull any image updates (if using a registry) and run container
            docker run -d --name django-app -p 8000:8000 django-app
EOF
